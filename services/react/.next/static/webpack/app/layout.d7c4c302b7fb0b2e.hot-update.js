"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/layout",{

/***/ "(app-pages-browser)/./src/app/globals.css":
/*!*****************************!*\
  !*** ./src/app/globals.css ***!
  \*****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"8d976af99703\");\nif (true) { module.hot.accept() }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcHAvZ2xvYmFscy5jc3MiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGlFQUFlLGNBQWM7QUFDN0IsSUFBSSxJQUFVLElBQUksaUJBQWlCIiwic291cmNlcyI6WyIvaG9tZS9tYXR1cy9Qcm9qZWN0cy9vc3BhcmMtc2ltY29yZS9zZXJ2aWNlcy9yZWFjdC9zcmMvYXBwL2dsb2JhbHMuY3NzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IFwiOGQ5NzZhZjk5NzAzXCJcbmlmIChtb2R1bGUuaG90KSB7IG1vZHVsZS5ob3QuYWNjZXB0KCkgfVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/globals.css\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/lib/api.ts":
/*!************************!*\
  !*** ./src/lib/api.ts ***!
  \************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   apiClient: () => (/* binding */ apiClient)\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"(app-pages-browser)/./node_modules/axios/lib/axios.js\");\n\nclass ApiClient {\n    // Projects API\n    async getProjects(params) {\n        try {\n            // Construct parameters to match backend expectations\n            const queryParams = {\n                type: (params === null || params === void 0 ? void 0 : params.type) || 'user',\n                offset: (params === null || params === void 0 ? void 0 : params.offset) || 0,\n                limit: (params === null || params === void 0 ? void 0 : params.limit) || 5,\n                workspace_id: (params === null || params === void 0 ? void 0 : params.workspace_id) || null,\n                folder_id: (params === null || params === void 0 ? void 0 : params.folder_id) || null,\n                order_by: (params === null || params === void 0 ? void 0 : params.order_by) || JSON.stringify({\n                    field: \"last_change_date\",\n                    direction: \"desc\"\n                })\n            };\n            // Add optional parameters if provided\n            if (params === null || params === void 0 ? void 0 : params.search) {\n                queryParams.search = params.search;\n            }\n            if ((params === null || params === void 0 ? void 0 : params.show_hidden) !== undefined) {\n                queryParams.show_hidden = params.show_hidden;\n            }\n            if ((params === null || params === void 0 ? void 0 : params.tag_ids) && params.tag_ids.length > 0) {\n                queryParams.tag_ids = params.tag_ids;\n            }\n            // Debug: log the URL being called\n            const queryString = new URLSearchParams(queryParams).toString();\n            console.log(\"API Call: /api/projects?\".concat(queryString));\n            const response = await this.client.get('/projects', {\n                params: queryParams\n            });\n            console.log('API Response:', response.data);\n            return response.data.data || [];\n        } catch (error) {\n            console.error('Failed to fetch projects:', error);\n            return [];\n        }\n    }\n    async getProject(projectId) {\n        try {\n            const response = await this.client.get(\"/projects/\".concat(projectId));\n            return response.data.data || null;\n        } catch (error) {\n            console.error('Failed to fetch project:', error);\n            return null;\n        }\n    }\n    async createProject(project) {\n        try {\n            const response = await this.client.post('/projects', project);\n            return response.data.data || null;\n        } catch (error) {\n            console.error('Failed to create project:', error);\n            return null;\n        }\n    }\n    async updateProject(projectId, project) {\n        try {\n            const response = await this.client.put(\"/projects/\".concat(projectId), project);\n            return response.data.data || null;\n        } catch (error) {\n            console.error('Failed to update project:', error);\n            return null;\n        }\n    }\n    async deleteProject(projectId) {\n        try {\n            await this.client.delete(\"/projects/\".concat(projectId));\n            return true;\n        } catch (error) {\n            console.error('Failed to delete project:', error);\n            return false;\n        }\n    }\n    // User Profile API\n    async getUserProfile() {\n        try {\n            const response = await this.client.get('/me');\n            return response.data.data || null;\n        } catch (error) {\n            console.error('Failed to fetch user profile:', error);\n            return null;\n        }\n    }\n    async updateUserProfile(profile) {\n        try {\n            const response = await this.client.put('/me', profile);\n            return response.data.data || null;\n        } catch (error) {\n            console.error('Failed to update user profile:', error);\n            return null;\n        }\n    }\n    // Auth methods\n    async login(email, password) {\n        try {\n            const loginData = {\n                email,\n                password\n            };\n            console.log('Attempting login with:', email);\n            const response = await this.client.post('/auth/login', loginData);\n            console.log('Login response:', response.data);\n            // If login is successful (status 200), save user session\n            if (response.status === 200) {\n                // The backend uses cookie-based authentication, so no need to save tokens\n                return {\n                    status: 200,\n                    message: response.data.message || 'Login successful'\n                };\n            }\n            // If 2FA is required (status 202)\n            return response.data;\n        } catch (error) {\n            var _error_response_data, _error_response;\n            console.error('Login failed:', error);\n            throw new Error(((_error_response = error.response) === null || _error_response === void 0 ? void 0 : (_error_response_data = _error_response.data) === null || _error_response_data === void 0 ? void 0 : _error_response_data.message) || 'Login failed');\n        }\n    }\n    async logout() {\n        try {\n            await this.client.post('/auth/logout');\n            console.log('Logout successful');\n        } catch (error) {\n            console.error('Logout failed:', error);\n        }\n    }\n    async checkAuth() {\n        try {\n            const response = await this.client.get('/auth/check');\n            return response.status === 204;\n        } catch (error) {\n            console.error('Auth check failed:', error);\n            return false;\n        }\n    }\n    async getCurrentUser() {\n        try {\n            const response = await this.client.get('/me');\n            return response.data.data || null;\n        } catch (error) {\n            console.error('Failed to fetch current user:', error);\n            return null;\n        }\n    }\n    constructor(){\n        // Use local Next.js API routes to avoid CORS issues\n        this.client = axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].create({\n            baseURL: '/api',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            withCredentials: true\n        });\n        // Request interceptor for logging\n        this.client.interceptors.request.use((config)=>{\n            return config;\n        });\n        // Response interceptor for error handling\n        this.client.interceptors.response.use((response)=>response, (error)=>{\n            var _error_response;\n            console.error('API Error:', ((_error_response = error.response) === null || _error_response === void 0 ? void 0 : _error_response.data) || error.message);\n            return Promise.reject(error);\n        });\n    }\n}\nconst apiClient = new ApiClient();\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/api.ts\n"));

/***/ })

});